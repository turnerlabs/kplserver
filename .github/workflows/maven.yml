# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Deploy to ECR and Quay
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.5
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Create a GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
          
    - name: Build kplserver image
      uses: turnerlabs/fargate-cicd-action@master
      with:
        args: docker build -t kplserver .
        
    - name: Login to us-east-1 ECR
      uses: turnerlabs/fargate-cicd-action@master
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        args: login=$(aws ecr get-login --no-include-email) && eval "$login"

    - name: Tag kplserver image
      uses: turnerlabs/fargate-cicd-action@master
      with:
        args: docker tag kplserver:latest public.ecr.aws/v6s5y4v7/kplserver:${{ steps.tag_version.outputs.new_tag }}

    - name: Push kplserver image
      uses: turnerlabs/fargate-cicd-action@master
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        args: docker push public.ecr.aws/v6s5y4v7/kplserver
